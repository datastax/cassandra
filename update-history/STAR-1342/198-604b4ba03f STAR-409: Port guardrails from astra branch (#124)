--- a/src/java/org/apache/cassandra/cql3/Maps.java
+++ b/src/java/org/apache/cassandra/cql3/Maps.java
@@ -450,7 +450,7 @@
                 return;
             }
 
-            Map<ByteBuffer, ByteBuffer> elements = ((Value) value).map;
+            SortedMap<ByteBuffer, ByteBuffer> elements = ((Value) value).map;
 
             if (column.type.isMultiCell())
             {
@@ -459,11 +459,7 @@
                 // during SSTable write.
                 Guardrails.itemsPerCollection.guard(elements.size(), column.name.toString(), false, params.state);
 
-<<<<<<<
-                SortedMap<ByteBuffer, ByteBuffer> elements = ((Value) value).map;
-=======
                 int dataSize = 0;
->>>>>>>
                 for (Map.Entry<ByteBuffer, ByteBuffer> entry : elements.entrySet())
                 {
                     Cell cell = params.addCell(column, CellPath.create(entry.getKey()), entry.getValue());
--- a/test/unit/org/apache/cassandra/io/sstable/CQLSSTableWriterTest.java
+++ b/test/unit/org/apache/cassandra/io/sstable/CQLSSTableWriterTest.java
@@ -47,11 +47,7 @@
 import org.apache.cassandra.db.ColumnFamilyStore;
 import org.apache.cassandra.db.Keyspace;
 import org.apache.cassandra.db.commitlog.CommitLog;
-<<<<<<<
-=======
-import org.apache.cassandra.db.rows.Row;
 import org.apache.cassandra.db.marshal.UTF8Type;
->>>>>>>
 import org.apache.cassandra.dht.*;
 import org.apache.cassandra.exceptions.*;
 import org.apache.cassandra.schema.Schema;
