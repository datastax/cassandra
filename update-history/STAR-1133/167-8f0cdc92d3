--- a/src/java/org/apache/cassandra/db/compaction/CompactionTask.java
+++ b/src/java/org/apache/cassandra/db/compaction/CompactionTask.java
@@ -223,75 +223,34 @@
                 return;
 
             // log a bunch of statistics about the result and save to system table compaction_history
-            long durationInNano = System.nanoTime() - start;
-            long dTime = TimeUnit.NANOSECONDS.toMillis(durationInNano);
-            long startsize = inputSizeBytes;
-            long endsize = SSTableReader.getTotalBytes(newSStables);
-            double ratio = (double) endsize / (double) startsize;
-
-            StringBuilder newSSTableNames = new StringBuilder();
-            for (SSTableReader reader : newSStables)
-                newSSTableNames.append(reader.descriptor.baseFilename()).append(",");
-            long totalSourceRows = 0;
-            for (int i = 0; i < mergedRowCounts.length; i++)
-                totalSourceRows += mergedRowCounts[i] * (i + 1);
-
-            String mergeSummary = updateCompactionHistory(taskId, cfs.keyspace.getName(), cfs.getTableName(), mergedRowCounts, startsize, endsize);
-
-            logger.info(String.format("Compacted (%s) %d sstables to [%s] to level=%d.  %s to %s (~%d%% of original) in %,dms.  Read Throughput = %s, Write Throughput = %s, Row Throughput = ~%,d/s.  %,d total partitions merged to %,d.  Partition merge counts were {%s}",
-                                       taskId,
-                                       transaction.originals().size(),
-                                       newSSTableNames.toString(),
-                                       getLevel(),
-                                       FBUtilities.prettyPrintMemory(startsize),
-                                       FBUtilities.prettyPrintMemory(endsize),
-                                       (int) (ratio * 100),
-                                       dTime,
-                                       FBUtilities.prettyPrintMemoryPerSecond(startsize, durationInNano),
-                                       FBUtilities.prettyPrintMemoryPerSecond(endsize, durationInNano),
-                                       (int) totalSourceCQLRows / (TimeUnit.NANOSECONDS.toSeconds(durationInNano) + 1),
-                                       totalSourceRows,
+            long  endsize = SSTableReader.getTotalBytes(newSStables);
+
+
+            updateCompactionHistory(taskId,
+            cfs.keyspace.getName(),
+                cfs.getTableName(),
+            mergedRowsHistogram,
+            inputSizeBytes,
+                endsize);
+
+            if (
+
+            logger.isDebugEnabled())
+                                       {
+                                       debugLogCompactionSummaryInfo(taskId,
+                                       start,
                                        totalKeysWritten,
-                                       mergeSummary));
+                                       inputSizeBytes,
+                                       newSStables,
+                                       mergedRowsHistogram,
+                                       (int) totalSourceCQLRows ,
+                                       endsize);
+                                       }
             if (logger.isTraceEnabled())
             {
-                logger.trace("CF Total Bytes Compacted: {}", FBUtilities.prettyPrintMemory(CompactionTask.addToTotalBytesCompacted(endsize)));
-                logger.trace("Actual #keys: {}, Estimated #keys:{}, Err%: {}", totalKeysWritten, estimatedKeys, ((double)(totalKeysWritten - estimatedKeys)/totalKeysWritten));
+                traceLogCompactionSummaryInfo(totalKeysWritten, estimatedKeys, endsize);
             }
-<<<<<<<
             cfs.getCompactionStrategyManager().compactionLogger.compaction(startTime, transaction.originals(), System.currentTimeMillis(), newSStables);
-=======
-            else
-            {
-                // log a bunch of statistics about the result and save to system table compaction_history
-
-                long endsize = SSTableReader.getTotalBytes(newSStables);
-
-                updateCompactionHistory(taskId,
-                                        cfs.keyspace.getName(),
-                                        cfs.getTableName(),
-                                        mergedRowsHistogram,
-                                        inputSizeBytes,
-                                        endsize);
-
-                if (logger.isDebugEnabled())
-                {
-                    debugLogCompactionSummaryInfo(taskId,
-                                                  start,
-                                                  totalKeysWritten,
-                                                  inputSizeBytes,
-                                                  newSStables,
-                                                  mergedRowsHistogram,
-                                                  (int) totalSourceCQLRows,
-                                                  endsize);
-                }
-                if (logger.isTraceEnabled())
-                {
-                    traceLogCompactionSummaryInfo(totalKeysWritten, estimatedKeys, endsize);
-                }
-                cfs.getCompactionStrategyManager().compactionLogger.
-                        compaction(startTime, transaction.originals(), System.currentTimeMillis(), newSStables);
->>>>>>>
 
             // update the metrics
             cfs.metric.compactionBytesWritten.inc(endsize);
