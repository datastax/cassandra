--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,8 +1,3 @@
-<<<<<<<
-4.1
- * Add information whether sstables are dropped to SchemaChangeListener (CASSANDRA-17582)
- * Fix a race condition where a keyspace can be oopened while it is being removed (CASSANDRA-17658)
-=======
 5.0-alpha2
  * Remove deprecated properties in CompressionParams (CASSANDRA-18742)
  * Add support for repair coordinator to retry messages that timeout (CASSANDRA-18816)
@@ -26,7 +21,6 @@
 Merged from 3.0:
  * Upgrade snappy-java to 1.1.10.4 (CASSANDRA-18878)
  * Add cqlshrc.sample and credentials.sample into Debian package (CASSANDRA-18818)
->>>>>>>
 
 
 5.0-alpha1
--- a/src/java/org/apache/cassandra/schema/Schema.java
+++ b/src/java/org/apache/cassandra/schema/Schema.java
@@ -27,10 +27,6 @@
 import java.util.Set;
 import java.util.UUID;
 import java.util.concurrent.TimeUnit;
-<<<<<<<
-=======
-import java.util.concurrent.TimeoutException;
->>>>>>>
 import java.util.function.Consumer;
 import java.util.function.Supplier;
 
@@ -255,11 +251,7 @@
         return keyspaceInstances.blockingLoadIfAbsent(keyspaceName, loadFunction);
     }
 
-<<<<<<<
     private Keyspace maybeRemoveKeyspaceInstance(String keyspaceName, Consumer<Keyspace> unloadFunction)
-=======
-    public Keyspace maybeRemoveKeyspaceInstance(String keyspaceName, Consumer<Keyspace> unloadFunction)
->>>>>>>
     {
         try
         {
@@ -716,11 +708,7 @@
         // we send mutations to the correct set of bootstrapping nodes. Refer CASSANDRA-15433.
         if (keyspace.params.replication.klass != LocalStrategy.class && Keyspace.isInitialized())
         {
-<<<<<<<
-            PendingRangeCalculatorService.calculatePendingRanges(Keyspace.open(keyspace.name, this, false).getReplicationStrategy(), keyspace.name);
-=======
             PendingRangeCalculatorService.calculatePendingRanges(Keyspace.open(keyspace.name, this, true).getReplicationStrategy(), keyspace.name);
->>>>>>>
         }
     }
 
@@ -744,10 +732,7 @@
                 unload(keyspaceMetadata);
             });
             assert unloadedKeyspace == keyspace;
-<<<<<<<
-=======
 
->>>>>>>
             Keyspace.writeOrder.awaitNewBarrier();
         }
         else
