--- a/src/java/org/apache/cassandra/db/compaction/Scrubber.java
+++ b/src/java/org/apache/cassandra/db/compaction/Scrubber.java
@@ -302,15 +302,11 @@
                         throwIfCannotContinue(key, th);
 
                         badPartitions++;
-<<<<<<<
-                        if (currentIndexKey != null)
-                            if (!seekToNextPartition())
-                                break;
-=======
                         if (indexIterator != null)
                         {
                             outputHandler.warn("Partition starting at position " + dataStart + " is unreadable; skipping to next");
-                            seekToNextPartition();
+                            if (!seekToNextPartition())
+                                break;
                         }
                         else
                         {
@@ -323,7 +319,6 @@
                             // There's no way to resync and continue. Give up.
                             break;
                         }
->>>>>>>
                     }
                 }
             }
--- a/test/unit/org/apache/cassandra/db/ScrubTest.java
+++ b/test/unit/org/apache/cassandra/db/ScrubTest.java
@@ -89,11 +89,7 @@
 import org.apache.cassandra.io.util.FileUtils;
 import org.apache.cassandra.schema.KeyspaceParams;
 import org.apache.cassandra.schema.TableMetadataRef;
-import org.apache.cassandra.tools.StandaloneScrubber;
-import org.apache.cassandra.tools.ToolRunner;
-import org.apache.cassandra.tools.ToolRunner.ToolResult;
 import org.apache.cassandra.utils.ByteBufferUtil;
-import org.assertj.core.api.Assertions;
 
 import static org.apache.cassandra.SchemaLoader.counterCFMD;
 import static org.apache.cassandra.SchemaLoader.createKeyspace;
@@ -101,11 +97,8 @@
 import static org.apache.cassandra.SchemaLoader.loadSchema;
 import static org.apache.cassandra.SchemaLoader.standardCFMD;
 import static org.apache.cassandra.db.ColumnFamilyStore.FlushReason.UNIT_TESTS;
-<<<<<<<
 import static org.assertj.core.api.Assertions.assertThat;
-=======
 import static org.hamcrest.Matchers.is;
->>>>>>>
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
